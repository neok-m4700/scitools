%!PS-Adobe-2.0 EPSF-2.0
%%Title: tmp2.eps
%%Creator: gnuplot 4.6 patchlevel 3
%%CreationDate: Sun Jun 21 13:16:11 2015
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 5 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 15.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -66 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.6 (September 2012)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (tmp2.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 3)
  /Author (hpl)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sun Jun 21 13:16:11 2015)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 200 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
0.400 UL
LTb
0.400 UL
LTb
977 1663 M
3085 662 V
6223 1380 M
4062 2325 L
977 1663 M
0 1997 V
stroke
1.000 UL
LTa
3138 718 M
977 1663 L
stroke
0.400 UL
LTb
3138 718 M
-59 26 V
stroke
3250 636 M
[ [(Helvetica) 200.0 0.0 true true 0 (-30)]
] -66.7 MLshow
0.400 UL
LTb
0.400 UL
LTb
977 1663 M
59 -26 V
stroke
1.000 UL
LTa
3651 829 M
1491 1773 L
stroke
0.400 UL
LTb
3651 829 M
-58 25 V
stroke
3764 747 M
[ [(Helvetica) 200.0 0.0 true true 0 (-20)]
] -66.7 MLshow
0.400 UL
LTb
0.400 UL
LTb
1491 1773 M
59 -25 V
stroke
1.000 UL
LTa
4166 939 M
2005 1884 L
stroke
0.400 UL
LTb
4166 939 M
-59 26 V
stroke
4278 857 M
[ [(Helvetica) 200.0 0.0 true true 0 (-10)]
] -66.7 MLshow
0.400 UL
LTb
0.400 UL
LTb
2005 1884 M
59 -26 V
stroke
1.000 UL
LTa
4680 1049 M
2520 1994 L
stroke
0.400 UL
LTb
4680 1049 M
-59 26 V
stroke
4793 967 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0)]
] -66.7 MLshow
0.400 UL
LTb
0.400 UL
LTb
2520 1994 M
59 -26 V
stroke
1.000 UL
LTa
5195 1159 M
3034 2104 L
stroke
0.400 UL
LTb
5195 1159 M
-59 26 V
stroke
5307 1077 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 10)]
] -66.7 MLshow
0.400 UL
LTb
0.400 UL
LTb
3034 2104 M
59 -26 V
stroke
1.000 UL
LTa
5709 1270 M
3549 2215 L
stroke
0.400 UL
LTb
5709 1270 M
-59 25 V
stroke
5821 1188 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 20)]
] -66.7 MLshow
0.400 UL
LTb
0.400 UL
LTb
3549 2215 M
58 -26 V
stroke
1.000 UL
LTa
6223 1380 M
4062 2325 L
stroke
0.400 UL
LTb
6223 1380 M
-59 26 V
stroke
6336 1298 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 30)]
] -66.7 MLshow
0.400 UL
LTb
0.400 UL
LTb
4062 2325 M
59 -26 V
stroke
1.000 UL
LTa
3138 718 M
3085 662 V
stroke
0.400 UL
LTb
3138 718 M
51 11 V
stroke
3040 683 M
[ [(Helvetica) 200.0 0.0 true true 0 (-30)]
] -66.7 MCshow
0.400 UL
LTb
0.400 UL
LTb
6223 1380 M
-51 -11 V
stroke
1.000 UL
LTa
2778 876 M
3085 661 V
stroke
0.400 UL
LTb
2778 876 M
51 11 V
stroke
2679 841 M
[ [(Helvetica) 200.0 0.0 true true 0 (-20)]
] -66.7 MCshow
0.400 UL
LTb
0.400 UL
LTb
5863 1537 M
-51 -11 V
stroke
1.000 UL
LTa
2417 1033 M
3086 662 V
stroke
0.400 UL
LTb
2417 1033 M
52 11 V
stroke
2319 998 M
[ [(Helvetica) 200.0 0.0 true true 0 (-10)]
] -66.7 MCshow
0.400 UL
LTb
0.400 UL
LTb
5503 1695 M
-52 -11 V
stroke
1.000 UL
LTa
2057 1191 M
3086 661 V
stroke
0.400 UL
LTb
2057 1191 M
52 11 V
stroke
1959 1156 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0)]
] -66.7 MCshow
0.400 UL
LTb
0.400 UL
LTb
5143 1852 M
-52 -11 V
stroke
1.000 UL
LTa
1697 1348 M
3086 662 V
stroke
0.400 UL
LTb
1697 1348 M
52 11 V
stroke
1599 1313 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 10)]
] -66.7 MCshow
0.400 UL
LTb
0.400 UL
LTb
4783 2010 M
-52 -11 V
stroke
1.000 UL
LTa
1337 1506 M
3085 661 V
stroke
0.400 UL
LTb
1337 1506 M
51 11 V
stroke
1239 1471 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 20)]
] -66.7 MCshow
0.400 UL
LTb
0.400 UL
LTb
4422 2167 M
-51 -11 V
stroke
1.000 UL
LTa
977 1663 M
3085 662 V
stroke
0.400 UL
LTb
977 1663 M
51 11 V
stroke
878 1628 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 30)]
] -66.7 MCshow
0.400 UL
LTb
0.400 UL
LTb
4062 2325 M
-51 -11 V
977 2329 M
63 0 V
stroke
851 2329 M
[ [(Helvetica) 200.0 0.0 true true 0 (-6)]
] -66.7 MRshow
0.400 UL
LTb
0.400 UL
LTb
977 2550 M
63 0 V
stroke
851 2550 M
[ [(Helvetica) 200.0 0.0 true true 0 (-4)]
] -66.7 MRshow
0.400 UL
LTb
0.400 UL
LTb
977 2772 M
63 0 V
stroke
851 2772 M
[ [(Helvetica) 200.0 0.0 true true 0 (-2)]
] -66.7 MRshow
0.400 UL
LTb
0.400 UL
LTb
977 2994 M
63 0 V
stroke
851 2994 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0)]
] -66.7 MRshow
0.400 UL
LTb
0.400 UL
LTb
977 3216 M
63 0 V
stroke
851 3216 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 2)]
] -66.7 MRshow
0.400 UL
LTb
0.400 UL
LTb
977 3438 M
63 0 V
stroke
851 3438 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 4)]
] -66.7 MRshow
0.400 UL
LTb
0.400 UL
LTb
977 3660 M
63 0 V
stroke
851 3660 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 6)]
] -66.7 MRshow
0.400 UL
LTb
LCb setrgbcolor
137 2994 M
[ [(Helvetica) 200.0 0.0 true true 0 (z\(t\))]
] -66.7 MCshow
LTb
3600 4659 M
[ [(Helvetica) 200.0 0.0 true true 0 (plot3 example)]
] -66.7 MCshow
1.000 UP
% Begin plot #1
1.000 UL
LT0
3026 2786 M
331 24 V
334 3 V
326 -18 V
305 -36 V
272 -54 V
228 -68 V
177 -81 V
118 -88 V
56 -93 V
-7 -95 V
-68 -91 V
-128 -84 V
-179 -75 V
-225 -61 V
-259 -46 V
-283 -30 V
-295 -11 V
-295 7 V
-285 25 V
-262 41 V
-230 56 V
-189 68 V
-141 78 V
-89 85 V
-32 87 V
22 87 V
77 84 V
127 75 V
172 67 V
208 54 V
236 41 V
254 25 V
261 9 V
258 -7 V
246 -22 V
223 -36 V
192 -49 V
153 -58 V
111 -67 V
62 -70 V
14 -73 V
-34 -71 V
-82 -68 V
-123 -60 V
-161 -51 V
-190 -40 V
-213 -27 V
-225 -14 V
-228 0 V
-223 15 V
-209 27 V
-188 39 V
-157 50 V
-123 57 V
-84 64 V
-42 67 V
1 67 V
43 66 V
82 60 V
118 54 V
148 46 V
172 36 V
189 24 V
197 12 V
196 0 V
191 -12 V
176 -22 V
155 -33 V
128 -41 V
96 -48 V
61 -51 V
25 -53 V
-12 -54 V
-48 -52 V
-81 -47 V
-110 -40 V
-134 -33 V
-153 -23 V
-165 -14 V
-170 -3 V
-168 7 V
-160 17 V
-146 27 V
-126 34 V
-101 41 V
-74 46 V
-43 50 V
-11 50 V
20 49 V
49 47 V
78 42 V
100 37 V
120 30 V
134 21 V
142 13 V
144 4 V
142 -4 V
133 -13 V
119 -21 V
100 -27 V
79 -32 V
55 -36 V
28 -38 V
1 -39 V
stroke 4260 2521 M
-25 -36 V
-49 -34 V
-72 -31 V
-90 -25 V
-105 -19 V
-115 -12 V
-121 -4 V
-121 3 V
-117 10 V
-108 17 V
-96 23 V
-79 28 V
-60 32 V
-38 35 V
-17 35 V
6 36 V
27 35 V
47 32 V
65 28 V
80 24 V
90 18 V
98 12 V
101 6 V
99 -1 V
96 -6 V
86 -12 V
76 -16 V
60 -21 V
44 -23 V
27 -25 V
8 -26 V
-11 -25 V
-27 -24 V
-44 -22 V
-57 -17 V
-69 -14 V
-77 -9 V
-81 -4 V
-83 0 V
-81 6 V
-76 11 V
-68 14 V
-58 19 V
-46 21 V
-32 24 V
-16 25 V
-2 25 V
13 24 V
26 23 V
40 21 V
49 18 V
58 14 V
64 10 V
67 6 V
66 3 V
65 -2 V
60 -6 V
53 -9 V
44 -12 V
34 -14 V
22 -16 V
10 -16 V
-3 -16 V
-13 -15 V
-25 -14 V
-35 -12 V
-42 -10 V
-48 -6 V
-53 -4 V
-54 0 V
-52 4 V
-52 6 V
-46 10 V
-41 12 V
-33 14 V
-24 15 V
-15 17 V
-5 17 V
5 17 V
14 16 V
22 15 V
30 13 V
35 11 V
40 8 V
42 6 V
44 3 V
41 1 V
41 -2 V
36 -4 V
31 -6 V
24 -8 V
17 -9 V
10 -9 V
2 -10 V
-6 -9 V
-13 -9 V
-19 -8 V
-26 -6 V
-29 -4 V
-33 -2 V
-35 0 V
-34 1 V
-34 5 V
-32 6 V
stroke 3532 2712 M
-28 7 V
-24 10 V
-19 10 V
-12 12 V
-7 12 V
0 12 V
7 11 V
12 11 V
17 10 V
22 9 V
25 7 V
28 6 V
29 4 V
28 2 V
28 0 V
26 -1 V
24 -3 V
19 -4 V
14 -5 V
10 -6 V
5 -6 V
-2 -6 V
-6 -6 V
-11 -5 V
-16 -5 V
-20 -3 V
-22 -2 V
-25 0 V
-26 1 V
-24 3 V
-25 4 V
-23 5 V
-21 7 V
-17 8 V
-12 9 V
-8 10 V
-4 10 V
2 10 V
7 9 V
11 9 V
15 9 V
19 7 V
22 6 V
24 5 V
25 3 V
24 1 V
24 0 V
23 -1 V
20 -3 V
16 -3 V
12 -5 V
8 -5 V
2 -6 V
-2 -5 V
-8 -6 V
-12 -5 V
-17 -4 V
-20 -2 V
-24 -2 V
-25 0 V
-26 1 V
-27 4 V
-26 4 V
-24 7 V
-21 7 V
-17 9 V
-12 10 V
-8 11 V
-2 11 V
4 11 V
9 10 V
15 10 V
20 10 V
24 7 V
27 7 V
30 4 V
30 3 V
31 1 V
30 -2 V
28 -2 V
23 -5 V
20 -6 V
13 -7 V
8 -8 V
1 -8 V
-6 -8 V
-13 -8 V
-19 -7 V
-25 -6 V
-30 -4 V
-34 -2 V
-37 0 V
-37 2 V
-37 5 V
-36 6 V
-33 9 V
-28 11 V
-22 13 V
-15 14 V
-8 15 V
1 15 V
10 15 V
18 14 V
26 14 V
stroke 3445 3039 M
33 11 V
38 10 V
44 7 V
45 4 V
47 1 V
47 -1 V
44 -4 V
39 -7 V
33 -10 V
25 -11 V
16 -13 V
6 -13 V
-4 -14 V
-15 -14 V
-25 -13 V
-35 -11 V
-43 -8 V
-51 -6 V
-55 -3 V
-57 1 V
-59 4 V
-58 8 V
-53 11 V
-47 15 V
-38 17 V
-28 20 V
-17 21 V
-4 22 V
10 23 V
22 21 V
36 20 V
46 18 V
57 15 V
65 11 V
70 7 V
72 3 V
72 -1 V
70 -7 V
64 -10 V
55 -14 V
44 -18 V
30 -20 V
16 -22 V
0 -22 V
-17 -23 V
-33 -21 V
-48 -19 V
-61 -16 V
-73 -12 V
-82 -7 V
-88 -2 V
-88 3 V
-89 9 V
-84 14 V
-75 19 V
-63 24 V
-49 27 V
-32 30 V
-13 32 V
7 33 V
26 32 V
46 30 V
64 27 V
79 23 V
93 17 V
102 12 V
106 6 V
109 -1 V
106 -8 V
98 -14 V
87 -20 V
72 -25 V
52 -30 V
32 -32 V
8 -34 V
-15 -34 V
-39 -33 V
-62 -30 V
-83 -27 V
-101 -20 V
-115 -15 V
-124 -7 V
-129 1 V
-130 8 V
-125 17 V
-113 24 V
-99 31 V
-79 36 V
-55 42 V
-29 44 V
-2 45 V
27 46 V
56 43 V
81 40 V
106 34 V
125 27 V
140 19 V
151 11 V
153 1 V
153 -8 V
144 -18 V
129 -26 V
110 -34 V
85 -40 V
stroke 4354 3318 M
56 -45 V
24 -48 V
-9 -49 V
-42 -48 V
-75 -45 V
-105 -40 V
-131 -33 V
-153 -24 V
-170 -15 V
-177 -4 V
-181 7 V
-176 17 V
-164 29 V
-145 38 V
-119 47 V
-90 54 V
-54 59 V
-17 61 V
22 62 V
62 60 V
98 55 V
132 49 V
161 40 V
185 30 V
200 19 V
208 5 V
209 -7 V
201 -20 V
183 -31 V
160 -43 V
128 -52 V
91 -60 V
50 -64 V
6 -67 V
-40 -66 V
-84 -63 V
-125 -57 V
-163 -49 V
-195 -38 V
-219 -26 V
-235 -11 V
-240 2 V
-238 18 V
-226 31 V
-203 46 V
-173 57 V
-135 68 V
-90 74 V
-42 80 V
9 81 V
61 80 V
111 75 V
158 67 V
198 57 V
231 45 V
257 29 V
270 13 V
275 -3 V
268 -20 V
251 -37 V
222 -51 V
184 -64 V
139 -75 V
86 -82 V
31 -87 V
-29 -87 V
-87 -85 V
-142 -78 V
-193 -68 V
-237 -56 V
-273 -41 V
-296 -23 V
-309 -5 V
-311 15 V
-298 33 V
-275 51 V
-239 68 V
-194 81 V
-139 92 V
-79 100 V
-14 103 V
52 102 V
117 99 V
179 90 V
% End plot #1
stroke
0.400 UL
LTb
6223 1380 M
3138 718 L
977 1663 M
3138 718 L
stroke
LCb setrgbcolor
5220 813 M
[ [(Helvetica) 200.0 0.0 true true 0 (x\(t\))]
] -66.7 MCshow
LTb
LCb setrgbcolor
1286 1025 M
[ [(Helvetica) 200.0 0.0 true true 0 (y\(t\))]
] -66.7 MCshow
LTb
LCb setrgbcolor
137 2994 M
[ [(Helvetica) 200.0 0.0 true true 0 (z\(t\))]
] -66.7 MCshow
LTb
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
